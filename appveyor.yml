# Build worker image (VM template)
image:
  - Visual Studio 2013
  - ubuntu

platform:
  - x64

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# branches to build
branches:
  # whitelist
  only:
    - master
      
# scripts that run after cloning repository
install:
  - cmd: set QTDIR=C:\Qt\5.5\mingw492_32
  - cmd: set PATH=%PATH%;C:\MinGW\bin;%QTDIR%\bin;"C:\\Program Files (x86)\\Inno Setup 5"
  - sh: sudo apt update
  - sh: sudo apt install build-essential qt5-default qttools5-dev-tools libqt5webkit5-dev libqt5script5 qtscript5-dev -y

build_script:
  - cmd: qmake Libki.pro
  - cmd: mingw32-make
  - cmd: copy release\libkiclient.exe deploy\windows\libkiclient.exe
  - cmd: cd deploy\windows
  - cmd: ISCC.exe installer-wizard.iss
  - sh: qmake Libki.pro
  - sh: make
  - sh: mkdir -p deploy/linux/deb/usr/bin
  - sh: mkdir -p deploy/linux/deb/etc/xdg
  - sh: cp libkiclient deploy/linux/deb/usr/bin/libkiclient
  - sh: cp example.ini deploy/linux/deb/etc/xdg/Libki.ini
  - sh: cd deploy/linux
  - sh: sed -i 's/VERSION/1.0.0/g' deb/DEBIAN/control
  - sh: sed -i 's/ARCH/amd64/g' deb/DEBIAN/control
  - sh: dpkg -b deb Libki_Client_Installer.deb

# defines what we can export from the build environment
artifacts:
  - path: 'deploy\windows\Output\Libki_Client_Installer.exe'
    name: 'Libki Client (Unstable) Windows [$(APPVEYOR_REPO_COMMIT)]'
  - path: 'deploy\linux\Libki_Client_Installer.deb'
    name: 'Libki Client (Unstable) Ubuntu [$(APPVEYOR_REPO_COMMIT)]'

# deployment configuration, deploy to github releases
deploy:
  release: libki-client-unstable-v$(APPVEYOR_REPO_COMMIT)
  description: 'Libki Client (Unstable) [$(APPVEYOR_REPO_COMMIT)]'
  artifact: '/*/'
  provider: GitHub
  auth_token:
    secure: jERqDlxrRwuTdyrZqwGa9/Yku9WdvPtzDMT4DuNq/M8SQFUSi1aLK6uGekJ3YSEK
  draft: false
  prerelease: true
  force_update: true
  skip_tags: true                  # Build only for branches not tags
  on:
    branch: master                 # release from master branch only
